---
description: 
globs: 
alwaysApply: true
---
Parfait, voici une version consolidée, logique et lisible de toutes les règles que vous avez définies, formatée pour une lecture optimale par l’IA (et agents MCP). Elle respecte vos structures, automatismes, et contraintes de projet multi-agent.

---

## 🧠 **AI Assistant Runti VARIABLES & FLAGS

* `tools_count = 0` → **Init at start**, **increment with each tool usage**
* `task_tree_id = <current_git_branch>` → **Update if project branch changes**
* `CONTINUE_AUTOMATIC = ON`
  → If `OFF` and task is completed → **terminate chat**
  → If `ON` → **continue same task automatically**
* `USE_ABSOLUTE_PATH_FROM_ROOT_PROJECT = ON`
  → Use **absolute path** from `<projet_path_root>`
  → Refer to: `@need-update-this-file-if-change-pro


At each new session:

1. **Set `tools_count = 0`**
2. Load MCP context using `MCP tools`
3. Read core rule file:
   [MCP Task Management: Best Practices Guide.mdc](mdc:.cursor/rules/MCP Task Management: Best Practices Guide.mdc)
4. Read project structure & context:
   [need-update-this-file-if-change-project-tree.mdc](mdc:.cursor/rules/need-update-this-file-if-change-project-tree.mdc)

---

### 🔁 **DURING CHAT SESSION**

#### 📌 TOOL USAGE

* Every **tool use**: `tools_count += 1`
* If `tools_count == 20`:
  → `tools_count = 0`
  → Call: `manage_context()` to sync current session

---

#### 💻 TERMINAL COMMANDS

* Run with timeout protection
  → **If no result > 20s** → Force quit
  → Always show result if any

---

#### 👤 MCP AGENT TOOL CALL

**Use this sequence for each agent interaction:**

```text
"Call Agent..."         → call_agent()
"Retrieve Knowledge..." → (gather all relevant info)
"Switch Agent Capacity..." → (end call)
"Using dhafnck Tool..." → (for call tools is not call_agent())
```

---

### 🔄 **MCP ORCHESTRATIONs must follow: `@task_management_workflow.mdc`
* When `get_

  * Always check/update context from: `.cursor/rules/auto_rule.mdc`
  * Sync `context_*.md` to ensure valid state
  * Align role and context automatically with task/subtask

#### 📁 FILE ACCESS RULE

* **NEVER** access `.cursor/rules/tasks/**/*` directly
  → Use **`dhafnck_mcp` MCP server** to manage all tasks
  → Only access manually if user explicitly requests it

---

### 🔁 **AGENT AUTO-SWITCH SYSTEM**

Triggered on: `get_task` or `do_next` call

| Element       | Behavior                                                               |
| ------------- | ---------------------------------------------------------------------- |
| Assignee      | First `@assignee` triggers auto switch to corresponding role           |
| Agent Call    | `call_agent(name_agent="agent_name")` (strips "@")                     |
| Config Load   | Loads config from: `cursor_agent/yaml-lib/[agent_name]/`               |
| Behavior Swap | AI adapts role/knowledge automatically                                 |
| Documentation | `@Agent_Auto_Switch_Workflow.mdc` for full agent orchestration process |

---

### 📌 FILE PATH RULE

* **If** `USE_ABSOLUTE_PATH_FROM_ROOT_PROJECT = ON`
  → Use path relative to `<projet_path_root>`
  → Never use relative paths from current file/folder
  → Reference: `@need-update-this-file-if-change-project-tree.mdc`

---

### ✅ RULE FILE BEHAVIOR

* `.cursor/rules/auto_rule.mdc`
  → AI CAN READ ✅
  → AI CANNOT EDIT ❌

---

Souhaitez-vous que je transforme ce bloc en `.mdc` ou `