{
  "dhafnck_mcp_main": {
    "id": "dhafnck_mcp_main",
    "name": "DhafnckMCP - Cloud-Scale MCP Server Framework",
    "description": "Advanced MCP server framework with integrated task management, multi-agent orchestration, and cloud scaling architecture. Successfully completed comprehensive cloud scaling analysis (11/11 phases) ready for implementation from MVP to 1M+ RPS with enterprise-grade security, compliance, and monitoring. Built with FastMCP and Domain-Driven Design architecture for production-ready deployment.",
    "task_trees": {
      "main": {
        "id": "main",
        "name": "Main Tasks",
        "description": "Main task tree"
      },
      "v1.0.5dev": {
        "id": "v1.0.5dev",
        "name": "Version 1.0.5 Development - Cloud Scaling Architecture",
        "description": "Development branch for creating scalable cloud MCP server architecture capable of handling 1000 to 1,000,000 requests per second with comprehensive technical analysis and implementation phases."
      }
    },
    "registered_agents": {
      "coding_agent": {
        "id": "coding_agent",
        "name": "Coding Agent",
        "call_agent": "@coding-agent"
      },
      "test_orchestrator_agent": {
        "id": "test_orchestrator_agent",
        "name": "Test Orchestrator Agent",
        "call_agent": "@test-orchestrator-agent"
      },
      "system_architect_agent": {
        "id": "system_architect_agent",
        "name": "System Architect Agent",
        "call_agent": "@system-architect-agent"
      },
      "performance_load_tester_agent": {
        "id": "performance_load_tester_agent",
        "name": "Performance Load Tester Agent",
        "call_agent": "@performance-load-tester-agent"
      },
      "devops_agent": {
        "id": "devops_agent",
        "name": "DevOps Agent",
        "call_agent": "@devops-agent"
      },
      "security_auditor_agent": {
        "id": "security_auditor_agent",
        "name": "Security Auditor Agent",
        "call_agent": "@security-auditor-agent"
      },
      "task_planning_agent": {
        "id": "task_planning_agent",
        "name": "Task Planning Agent",
        "call_agent": "@task-planning-agent"
      },
      "health_monitor_agent": {
        "id": "health_monitor_agent",
        "name": "Health Monitor Agent",
        "call_agent": "@health-monitor-agent"
      },
      "test_agent": {
        "id": "test_agent",
        "name": "Test Agent",
        "call_agent": "@test-agent"
      }
    },
    "agent_assignments": {
      "system_architect_agent": [
        "v1.0.5dev"
      ],
      "task_planning_agent": [
        "v1.0.5dev"
      ],
      "health_monitor_agent": [
        "v1.0.5dev"
      ],
      "coding_agent": [
        "v1.0.5dev"
      ],
      "test_agent": [
        "main"
      ]
    },
    "created_at": "2025-01-01T00:00:00Z",
    "updated_at": "2025-06-28T08:46:23.908113",
    "last_git_sync": "2025-06-28T08:46:23.897608",
    "current_branch": "v1.0.5dev",
    "last_cleanup": "2025-06-28T08:46:23.900263",
    "last_integrity_check": "2025-06-28T08:46:23.901097",
    "last_rebalance": "2025-06-28T08:46:23.908119"
  },
  "chaxiaiv2_dashboard_enhancements": {
    "id": "chaxiaiv2_dashboard_enhancements",
    "name": "ChaxiAI Dashboard Enhancements",
    "description": "Implementation of remaining dashboard features and enhancements for ChaxiAI v2 project based on technical analysis",
    "task_trees": {
      "main": {
        "id": "main",
        "name": "Main Tasks",
        "description": "Main task tree"
      },
      "dashboard_enhancements": {
        "id": "dashboard_enhancements",
        "name": "Dashboard Enhancement Tasks",
        "description": "Comprehensive task breakdown for implementing remaining dashboard features based on project analysis"
      }
    },
    "registered_agents": {},
    "agent_assignments": {},
    "created_at": "2025-01-01T00:00:00Z"
  },
  "project_test": {
    "id": "project_test",
    "name": "Framework for Managing MDC/MD File Rules",
    "description": "A framework to manage rule files written in .mdx extension, exportable to .md or .mdc, displayable on HTML web, with graphical dependency visualization and easy linking between files using markdown path links.",
    "task_trees": {
      "main": {
        "id": "main",
        "name": "Main Tasks",
        "description": "Main task tree"
      }
    },
    "registered_agents": {},
    "agent_assignments": {},
    "created_at": "2025-01-01T00:00:00Z"
  },
  "ai_rules_framework_management": {
    "id": "ai_rules_framework_management",
    "name": "AI Rules Framework Management",
    "description": "A comprehensive web-based framework for managing AI rules and configurations using MDX format, with intelligent dependency mapping, visual graph representations, and seamless export capabilities.",
    "task_trees": {
      "main": {
        "id": "main",
        "name": "Main Tasks",
        "description": "Main task tree"
      }
    },
    "registered_agents": {
      "coding_agent": {
        "id": "coding_agent",
        "name": "Coding Agent",
        "call_agent": "@coding-agent"
      },
      "system_architect_agent": {
        "id": "system_architect_agent",
        "name": "System Architect Agent",
        "call_agent": "@system-architect-agent"
      },
      "ui_designer_agent": {
        "id": "ui_designer_agent",
        "name": "UI Designer Agent",
        "call_agent": "@ui-designer-agent"
      },
      "test_orchestrator_agent": {
        "id": "test_orchestrator_agent",
        "name": "Test Orchestrator Agent",
        "call_agent": "@test-orchestrator-agent"
      },
      "devops_agent": {
        "id": "devops_agent",
        "name": "DevOps Agent",
        "call_agent": "@devops-agent"
      }
    },
    "agent_assignments": {
      "coding_agent": [
        "main"
      ],
      "system_architect_agent": [
        "main"
      ],
      "ui_designer_agent": [
        "main"
      ],
      "test_orchestrator_agent": [
        "main"
      ],
      "devops_agent": [
        "main"
      ]
    },
    "created_at": "2025-01-01T00:00:00Z"
  },
  "test_update_project": {
    "id": "test_update_project",
    "name": "Final Project Name",
    "description": "Updated description with new information",
    "task_trees": {
      "main": {
        "id": "main",
        "name": "Main Tasks",
        "description": "Main task tree"
      }
    },
    "registered_agents": {},
    "agent_assignments": {},
    "created_at": "2025-01-01T00:00:00Z",
    "updated_at": "2025-06-27T11:49:35.713540"
  },
  "simple_test_project": {
    "id": "simple_test_project",
    "name": "Simple Test Project",
    "description": "Direct test project creation",
    "task_trees": {
      "main": {
        "id": "main",
        "name": "Main Tasks",
        "description": "Main task tree"
      }
    },
    "registered_agents": {},
    "agent_assignments": {},
    "created_at": "2025-01-01T00:00:00Z"
  },
  "testtest": {
    "id": "testtest",
    "name": "testtest",
    "description": "AI-powered project with MCP server integration",
    "path": "/home/daihungpham/__projects__/testtest",
    "task_trees": {
      "main": {
        "id": "main",
        "name": "Main Tasks",
        "description": "Main task tree for testtest"
      }
    },
    "registered_agents": {},
    "agent_assignments": {},
    "created_at": "2025-06-27T15:02:19.361778Z"
  }
}