---
description: 
globs: 
alwaysApply: false
---
# Task Object Structure & JSON Schema

## Source of Truth
- All tasks are managed in `.cursor/rules/tasks/tasks.json` (never edit directly; always use MCP tools).

## Task Object Fields
| Field           | Type              | Enum Values (if any) |
|-----------------|-------------------|----------------------|
| id              | str               |                      |
| title           | str               |                      |
| description     | str               |                      |
| status          | str               | todo, in_progress, blocked, review, testing, done, cancelled |
| priority        | str               | low, medium, high, urgent, critical |
| details         | str               |                      |
| estimated_effort| str               | quick, short, small, medium, large, xlarge, epic, massive |
| assignees       | list[str]         | (see AgentRole enum) |
| labels          | list[str]         | (see CommonLabel enum) |
| dependencies    | list[str]         |                      |
| subtasks        | list[object]      |                      |
| due_date        | str/null          |                      |
| created_at      | str               |                      |
| updated_at      | str               |                      |

## Enum Values
- **status**: todo, in_progress, blocked, review, testing, done, cancelled
- **priority**: low, medium, high, urgent, critical
- **estimated_effort**: quick, short, small, medium, large, xlarge, epic, massive
- **assignees**: see AgentRole enum in MCP tool docstring
- **labels**: see CommonLabel enum in MCP tool docstring

## Example
```json
{
  "id": "20250619001",
  "title": "Build Login Page",
  "description": "React login page with validation",
  "status": "todo",
  "priority": "high",
  "details": "",
  "estimated_effort": "short",
  "assignees": ["frontend_expert"],
  "labels": ["frontend"],
  "dependencies": [],
  "subtasks": [],
  "due_date": null,
  "created_at": "2025-06-19T20:35:22.450470",
  "updated_at": "2025-06-19T20:35:22.450494"
}
```

## Integration & Relationships
- Tasks are assigned to projects and task trees (see `/ .cursor/rules/02_AI-DOCS/TaskManagement/project_object_structure.mdc`).
- Dependencies can reference tasks in other trees if a cross-tree dependency exists at the project level.
- All task operations must use MCP tools for integrity and automation.

## Deprecated/Legacy Fields
- Do not use: agentAssignment, projectContext, orchestrationMetrics, workSession, contextFile, or any camelCase fields.

For more, see [Task Management Workflow](mdc:.cursor/rules/02_AI-DOCS/TaskManagement/dhafnck_mcp_workflow.mdc).
